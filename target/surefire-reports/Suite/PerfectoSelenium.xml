<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-D47G269" failures="1" tests="3" name="PerfectoSelenium" time="0.019" errors="0" timestamp="13 Jul 2022 19:56:35 GMT">
  <testcase classname="com.perfecto.sampleproject.PerfectoSelenium" name="@AfterMethod afterMethod" time="0.0">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;com.perfecto.reportium.client.ReportiumClient.testStop(com.perfecto.reportium.test.result.TestResult)&amp;quot; because &amp;quot;this.reportiumClient&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "com.perfecto.reportium.client.ReportiumClient.testStop(com.perfecto.reportium.test.result.TestResult)" because "this.reportiumClient" is null
	at com.perfecto.sampleproject.PerfectoSelenium.afterMethod(PerfectoSelenium.java:128)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 18 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.perfecto.sampleproject.PerfectoSelenium" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.perfecto.sampleproject.PerfectoSelenium" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.perfecto.sampleproject.PerfectoSelenium" name="androidTest" time="0.01">
    <failure type="java.lang.Exception" message="Please replace &amp;lt;&amp;lt;security token&amp;gt;&amp;gt; with your perfecto security token or pass it as maven properties: -DsecurityToken=&amp;lt;&amp;lt;SECURITY TOKEN&amp;gt;&amp;gt;">
      <![CDATA[java.lang.Exception: Please replace <<security token>> with your perfecto security token or pass it as maven properties: -DsecurityToken=<<SECURITY TOKEN>>
	at com.perfecto.sampleproject.PerfectoLabUtils.fetchSecurityToken(PerfectoLabUtils.java:80)
	at com.perfecto.sampleproject.PerfectoSelenium.androidTest(PerfectoSelenium.java:39)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
... Removed 16 stack frames]]>
    </failure>
  </testcase> <!-- androidTest -->
  <testcase classname="com.perfecto.sampleproject.PerfectoSelenium" name="iOSTest" time="0.0">
    <skipped/>
  </testcase> <!-- iOSTest -->
  <testcase classname="com.perfecto.sampleproject.PerfectoSelenium" name="webTest" time="0.0">
    <skipped/>
  </testcase> <!-- webTest -->
</testsuite> <!-- PerfectoSelenium -->
